{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vNetName": {
      "type": "string",
      "defaultValue": "ServersvNet",
      "metadata": {
        "description": "virtual network name"
      }
    },
    "GatewayvNetName": {
      "type": "string",
      "defaultValue": "GatewayvNet",
      "metadata": {
        "description": "Gateway virtual network name"
      }
    },
    "HubvNetName": {
      "type": "string",
      "defaultValue": "HubvNet",
      "metadata": {
        "description": "Hub virtual network name"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    }
  },
  "variables": {
    "vNet": {
      "AddressPrefix": "10.0.0.0/21",
      "serversSubnetPrefix": "10.0.2.0/24",
      "jumpboxSubnetPrefix": "10.0.0.0/24",
      "jumpBoxSubnetName": "JumpboxSubnet",
      "serversSubnetName": "ServersSubnet"
    },
    "hubvNet": {
      "AddressPrefix": "10.0.8.0/26",
      "azureFirewallSubnetPrefix": "10.0.8.0/26",
      "azureFirewallSubnetName": "AzureFirewallSubnet"
    },
    "GWvNet": {
      "AddressPrefix": "10.0.8.64/28",
      "GatewaySubnetName": "GatewaySubnet",
      "GatewaySubnetPrefix": "10.0.8.64/28"
    },
    "vNettoHubPeeringName": "vNettoHubPeering",
    "HubtovNetPeeringName": "HubtovNetPeering",
    "GWtoHubPeeringName": "GWtoHubPeering",
    "HubtoGWPeeringName": "HubtoGWPeering",
    "nextHopIP": "10.0.1.4",
    "jumpBoxNsgName": "JumpHostNSG",
    "jumpBoxNicName": "JumpHostNic",
    "jumpBoxSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), variables('vNet').jumpBoxSubnetName)]",
    "serverNicName": "ServerNic",
    "serverSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), variables('vNet').serversSubnetName)]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sajumpbox')]",
    "azfwRouteTableName": "AzfwRouteTable",
    "firewallName": "AzureFirewall",
    "JumpBoxPublicIPName": "JumpBoxPublicIP",
    "AzureFirewallPublicIPName": "AzureFirewallPublicIP",
    "gatewayPublicIPName": "gatewayPublicIP",
    "azureFirewallSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('HubvNetName'), variables('hubvNet').azureFirewallSubnetName)]",
    "GatewaySubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('GatewayvNetName'), variables('GWvNet').GatewaySubnetName)]",
    "azureFirewallPublicIpId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('AzureFirewallPublicIPName'))]",
    "gatewayName": "vpnGateway",
    "gatewaySku": "Basic",
    "vpnType": "Policy based"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('azfwRouteTableName')]",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "name": "AzfwDefaultRoute",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[variables('nextHopIP')]"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vNetName')]",
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('azfwRouteTableName'))]"
      ],
      "tags": {
        "displayName": "[parameters('vNetName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet').AddressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vNet').jumpBoxSubnetName]",
            "properties": {
              "addressPrefix": "[variables('vNet').jumpboxSubnetPrefix]"
            }
          },
          {
            "name": "[variables('vNet').serversSubnetName]",
            "properties": {
              "addressPrefix": "[variables('vNet').serversSubnetPrefix]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('azfwRouteTableName'))]"
              }
            }
          }
        ]
      },
      "resources": [
        {
          "name": "[variables('vNettoHubPeeringName')]",
          "type": "virtualNetworkPeerings",
          "apiVersion": "2018-08-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('HubvNetName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('GatewayvNetName'))]"
          ],
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('HubvNetName'))]"
            },
            "peeringState": "Connected"
          }
        }
      ]
    },
    {
      "name": "[parameters('HubvNetName')]",
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('azfwRouteTableName'))]"
      ],
      "tags": {
        "displayName": "[parameters('HubvNetName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('HubvNet').AddressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('HubvNet').azureFirewallSubnetName]",
            "properties": {
              "addressPrefix": "[variables('HubvNet').azureFirewallSubnetPrefix]"
            }
          }
        ]
      },
      "resources": [
        {
          "name": "[variables('HubtoGWPeeringName')]",
          "type": "virtualNetworkPeerings",
          "apiVersion": "2018-08-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('HubvNetName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('GatewayvNetName'))]"
          ],
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('GatewayvNetName'))]"
            },
            "peeringState": "Connected"
          }
        },
        {
          "name": "[variables('HubtovNetPeeringName')]",
          "type": "virtualNetworkPeerings",
          "apiVersion": "2018-08-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('HubvNetName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('GatewayvNetName'))]"
          ],
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vNetName'))]"
            },
            "peeringState": "Connected"
          }
        }
      ]
    },
    {
      "name": "[parameters('GatewayvNetName')]",
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', variables('azfwRouteTableName'))]"
      ],
      "tags": {
        "displayName": "[parameters('GatewayvNetName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('GWvNet').AddressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('GWvNet').GatewaySubnetName]",
            "properties": {
              "addressPrefix": "[variables('GWvNet').GatewaySubnetPrefix]"
            }
          }
        ]
      },
      "resources": [
        {
          "name": "[variables('GWtoHubPeeringName')]",
          "type": "virtualNetworkPeerings",
          "apiVersion": "2018-08-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('HubvNetName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('GatewayvNetName'))]"
          ],
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": true,
            "allowGatewayTransit": true,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('HubvNetName'))]"
            },
            "peeringState": "Connected"
          }
        }
      ]
    },
    {
      "apiVersion": "2018-07-01",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gatewayName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('gatewayPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('GatewayvNetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('GatewaySubnetId')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gatewayPublicIPName'))]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "sku": {
          "name": "[variables('gatewaySku')]",
          "tier": "[variables('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "[variables('vpnType')]",
        "enableBgp": "false"
      }
    },
    {
      "apiVersion": "2018-07-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gatewayPublicIPName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "apiVersion": "2018-07-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('JumpBoxPublicIPName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "apiVersion": "2018-07-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('AzureFirewallPublicIPName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[concat('pip', uniqueString(variables('AzureFirewallPublicIPName')))]"
        }
      }
    },
    {
      "name": "[variables('jumpBoxNsgName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "myNetworkSecurityGroupRuleRDP",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('JumpBoxNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('JumpBoxPublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpBoxNsgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('JumpBoxPublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('jumpBoxSubnetId')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpBoxNsgName'))]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('ServerNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('serverSubnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "JumpBox",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "createOption": "FromImage",
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "JumpBox",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('JumpBoxNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('JumpBoxNicName'))]"
      ]
    },
    {
      "name": "Server",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "createOption": "FromImage",
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "Server",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ServerNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('ServerNicName'))]"
      ]
    },
    {
      "apiVersion": "2018-07-01",
      "type": "Microsoft.Network/azureFirewalls",
      "name": "[variables('firewallName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('GatewayvNetName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('HubvNetName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('AzureFirewallPublicIPName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "subnet": {
                "id": "[variables('azureFirewallSubnetId')]"
              },
              "PublicIPAddress": {
                "id": "[variables('azureFirewallPublicIpId')]"
              }
            }
          }
        ],
        "applicationRuleCollections": [
          {
            "name": "appRc1",
            "properties": {
              "priority": 101,
              "action": {
                "type": "Allow"
              },
              "rules": [
                {
                  "name": "appRule1",
                  "protocols": [
                    {
                      "port": "80",
                      "protocolType": "http"
                    },
                    {
                      "port": "443",
                      "protocolType": "https"
                    }
                  ],
                  "targetFqdns": [
                    "*microsoft.com"
                  ]
                }
              ]
            }
          }
        ],
        "networkRuleCollections": [
          {
            "name": "netRc1",
            "properties": {
              "priority": 200,
              "action": {
                "type": "Allow"
              },
              "rules": [
                {
                  "name": "netRule1",
                  "protocols": [
                    "TCP"
                  ],
                  "sourceAddresses": [
                    "192.168.2.0/24"
                  ],
                  "destinationAddresses": [
                    "*"
                  ],
                  "destinationPorts": [
                    "8000-8999"
                  ]
                }
              ]
            }
          }
        ],
        "natRuleCollections": [
          {
            "name": "MarcNat",
            "properties": {
              "provisioningState": "Succeeded",
              "priority": 100,
              "action": {
                "type": "Dnat"
              },
              "rules": [
                {
                  "name": "JumpRDP",
                  "protocols": [
                    "TCP"
                  ],
                  "translatedAddress": "10.0.0.4",
                  "translatedPort": "3389",
                  "sourceAddresses": [
                    "*"
                  ],
                  "destinationAddresses": [
                    "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('AzureFirewallPublicIPName')), '2017-10-01', 'Full').properties.ipAddress]"
                  ],
                  "destinationPorts": [
                    "3390"
                  ]
                },
                {
                  "name": "ServerRDP",
                  "protocols": [
                    "TCP"
                  ],
                  "translatedAddress": "10.0.2.4",
                  "translatedPort": "3389",
                  "sourceAddresses": [
                    "*"
                  ],
                  "destinationAddresses": [
                    "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('AzureFirewallPublicIPName')), '2017-10-01', 'Full').properties.ipAddress]"
                  ],
                  "destinationPorts": [
                    "3391"
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "resourceID": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/publicIPAddresses', variables('AzureFirewallPublicIPName'))]"
    }
  }
}